{"version":3,"sources":["store/actionTypes/actionTypes.js","utils/utils.js","store/providers/GlobalStateProvider/GlobalStateProvider.js","algorithms/sorters.js","components/Sidebar/Sidebar.jsx","algorithms/index.js","components/Visualizer/Visualizer.jsx","App.js","serviceWorker.js","index.js"],"names":["SWAP_INDEX","defaultColor","generateArray","size","Array","from","length","Math","random","generateDefaultColors","x","generateCompareColors","indices","colors","forEach","ind","generateSwapColors","generateSweepColors","index","i","initialState","arr","playing","sortingAlgorithm","delay","GlobalStateContext","createContext","Provider","GlobalStateProvider","children","useReducer","state","action","type","payload","dispatch","value","bubbleSort","dispatchList","j","push","swap","sweep","insertionSort","selectionSort","minIdx","len","mergeSort","_mergeSort","start","end","mid","floor","temp","k","_merge","quickSort","_quickSort","low","high","pi","pivot","_partition","heapSort","_heapify","heap","max","leftChild","righChild","_buildMaxHeap","lastElement","Sidebar","useContext","useState","setDispatchList","dispatchListRef","useRef","current","timerId","setTimerId","useEffect","sortFunction","id","name","algorithm","getAlgorithm","curTimerId","setInterval","dispatchListRefCurrent","slice","clearInterval","onPlayToggleClick","e","a","className","onClick","disabled","step","min","onChange","target","Number","Visualizer","data","labels","map","datasets","backgroundColor","hoverBackgroundColor","hoverBorderColor","options","maintainAspectRatio","animation","duration","easing","rotate","scale","legend","display","scales","xAxes","yAxes","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.93f1d217.chunk.js","sourcesContent":["export const CHANGE_SIZE = \"CHANGE_SIZE\";\nexport const RANDOMIZE = \"RANDOMIZE\";\nexport const TOGGLE_PLAY = \"TOGGLE_PLAY\";\nexport const SWAP_INDEX = \"SWAP_INDEX\";\nexport const COMPARE_INDEX = \"COMPARE_INDEX\";\nexport const CHANGE_ALGORITHM = \"CHANGE_ALGORITHM\";\nexport const CHANGE_DELAY = \"CHANGE_DELAY\";\nexport const SWEEP = \"SWEEP\";\n","const defaultColor = \"rgba(237,37,78,0.9)\";\nconst compareColor = \"rgba(1,25,54,1)\";\nconst swapColor = \"rgba(249,220,92,0.9)\";\nconst sweepColor = \"#28965A\";\n\nexport const generateArray = (size) => Array.from({ length: size }, () => Math.random() * 40);\n\nexport const delay = (t) => new Promise((resolve) => setTimeout(resolve, t));\n\nexport const cancellableDelay = (t) => {\n  let timer = 0;\n  let reject = null;\n  const promise = new Promise((resolve, _reject) => {\n    reject = _reject;\n    timer = setTimeout(resolve, t);\n  });\n  return {\n    get promise() {\n      return promise;\n    },\n    cancel() {\n      if (timer) {\n        clearTimeout(timer);\n        timer = 0;\n        reject();\n        reject = null;\n      }\n    },\n  };\n};\n\nexport const generateDefaultColors = (size) => Array.from({ length: size }, (x) => defaultColor);\n\nexport const generateCompareColors = (size, indices) => {\n  const colors = Array.from({ length: size }, (x) => defaultColor);\n  indices.forEach((ind) => (colors[ind] = compareColor));\n  return colors;\n};\n\nexport const generateSwapColors = (size, indices) => {\n  const colors = Array.from({ length: size }, (x) => defaultColor);\n  indices.forEach((ind) => (colors[ind] = swapColor));\n  return colors;\n};\n\nexport const generateSweepColors = (size, index) => {\n  const colors = Array.from({ length: size }, (x) => defaultColor);\n  for (let i = 0; i <= index; i++) {\n    colors[i] = sweepColor;\n  }\n  return colors;\n};\n","import React, { createContext, useReducer } from \"react\";\nimport { CHANGE_SIZE, RANDOMIZE, TOGGLE_PLAY, SWAP_INDEX, COMPARE_INDEX, CHANGE_ALGORITHM, CHANGE_DELAY, SWEEP } from \"../../actionTypes/actionTypes\";\nimport { generateCompareColors, generateArray, generateDefaultColors, generateSwapColors, generateSweepColors } from \"../../../utils/utils\";\n\nconst defaultSize = 100;\nconst initialState = {\n  size: defaultSize,\n  arr: generateArray(defaultSize),\n  playing: false,\n  colors: generateDefaultColors(defaultSize),\n  sortingAlgorithm: 0,\n  delay: 0,\n};\nconst GlobalStateContext = createContext(initialState);\nconst { Provider } = GlobalStateContext;\n\nconst GlobalStateProvider = ({ children }) => {\n  const [state, dispatch] = useReducer((state, action) => {\n    switch (action.type) {\n      case CHANGE_SIZE:\n        return { ...state, size: action.payload.size, arr: generateArray(action.payload.size), colors: generateDefaultColors(action.payload.size) };\n      case RANDOMIZE:\n        return { ...state, arr: generateArray(state.size), colors: generateDefaultColors(state.size) };\n      case TOGGLE_PLAY:\n        return { ...state, playing: action.payload.playing };\n      case COMPARE_INDEX:\n        return { ...state, arr: action.payload.arr, colors: generateCompareColors(state.size, action.payload.indices) };\n      case SWAP_INDEX:\n        return { ...state, arr: action.payload.arr, colors: generateSwapColors(state.size, action.payload.indices) };\n      case SWEEP:\n        return { ...state, colors: generateSweepColors(state.size, action.payload.index) };\n      case CHANGE_ALGORITHM:\n        return { ...state, sortingAlgorithm: action.payload.sortingAlgorithm };\n      case CHANGE_DELAY:\n        return { ...state, delay: action.payload.delay };\n      default:\n        return state;\n    }\n  }, initialState);\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\n};\n\nexport { GlobalStateContext, GlobalStateProvider };\n","import { COMPARE_INDEX, SWAP_INDEX, SWEEP } from \"../store/actionTypes/actionTypes\";\n\n// bubbleSort\nexport const bubbleSort = (arr) => {\n  const dispatchList = [];\n  for (let i = 0; i < arr.length - 1; i++) {\n    for (let j = 0; j < arr.length - i - 1; j++) {\n      dispatchList.push({ type: COMPARE_INDEX, payload: { arr: [...arr], indices: [j, j + 1] } });\n      if (arr[j] > arr[j + 1]) {\n        swap(arr, j, j + 1);\n        dispatchList.push({ type: SWAP_INDEX, payload: { arr: [...arr], indices: [j, j + 1] } });\n      }\n    }\n  }\n  sweep(arr, dispatchList);\n  return dispatchList;\n};\n\n// insertionSort\nexport const insertionSort = (arr) => {\n  const dispatchList = [];\n  let i = 1;\n  while (i < arr.length) {\n    let x = arr[i];\n    let j = i - 1;\n    dispatchList.push({ type: COMPARE_INDEX, payload: { arr: [...arr], indices: [j, i] } });\n    while (j >= 0 && arr[j] > x) {\n      arr[j + 1] = arr[j];\n      dispatchList.push({ type: SWAP_INDEX, payload: { arr: [...arr], indices: [j, j + 1] } });\n      j--;\n    }\n    arr[j + 1] = x;\n    dispatchList.push({ type: SWAP_INDEX, payload: { arr: [...arr], indices: [j + 1, i] } });\n    i++;\n  }\n  sweep(arr, dispatchList);\n  return dispatchList;\n};\n\n// selectionSort\nexport const selectionSort = (arr) => {\n  const dispatchList = [];\n  let minIdx;\n  let len = arr.length;\n\n  for (let i = 0; i < len; i++) {\n    minIdx = i;\n    for (let j = i + 1; j < len; j++) {\n      dispatchList.push({ type: COMPARE_INDEX, payload: { arr: [...arr], indices: [j, minIdx] } });\n      if (arr[j] < arr[minIdx]) {\n        minIdx = j;\n      }\n    }\n    swap(arr, i, minIdx);\n    dispatchList.push({ type: SWAP_INDEX, payload: { arr: [...arr], indices: [i, minIdx] } });\n  }\n  sweep(arr, dispatchList);\n  return dispatchList;\n};\n\n// mergeSort\nexport const mergeSort = (arr) => {\n  const _merge = (arr, start, mid, end) => {\n    // create a temp array\n    const temp = [];\n\n    // crawlers for both intervals and for temp\n    let i = start,\n      j = mid + 1,\n      k = 0;\n\n    // traverse both arrays and in each iteration add smaller of both elements in temp\n    while (i <= mid && j <= end) {\n      dispatchList.push({ type: COMPARE_INDEX, payload: { arr: [...arr], indices: [i, j] } });\n      if (arr[i] <= arr[j]) {\n        dispatchList.push({ type: SWAP_INDEX, payload: { arr: [...arr], indices: [k, i] } });\n        temp[k++] = arr[i++];\n      } else {\n        dispatchList.push({ type: SWAP_INDEX, payload: { arr: [...arr], indices: [k, j] } });\n        temp[k++] = arr[j++];\n      }\n    }\n\n    // add elements left in the first interval\n    while (i <= mid) {\n      dispatchList.push({ type: SWAP_INDEX, payload: { arr: [...arr], indices: [k, i] } });\n      temp[k++] = arr[i++];\n    }\n\n    // add elements left in the second interval\n    while (j <= end) {\n      dispatchList.push({ type: SWAP_INDEX, payload: { arr: [...arr], indices: [k, j] } });\n      temp[k++] = arr[j++];\n    }\n\n    // copy temp to original interval\n    for (i = start; i <= end; i += 1) {\n      arr[i] = temp[i - start];\n      dispatchList.push({ type: SWAP_INDEX, payload: { arr: [...arr], indices: [i - start, i] } });\n    }\n  };\n\n  const _mergeSort = (arr, start, end) => {\n    if (start < end) {\n      const mid = Math.floor((start + end) / 2);\n      _mergeSort(arr, start, mid);\n      _mergeSort(arr, mid + 1, end);\n      _merge(arr, start, mid, end);\n    }\n  };\n\n  const dispatchList = [];\n  _mergeSort(arr, 0, arr.length - 1);\n  sweep(arr, dispatchList);\n  return dispatchList;\n};\n\n// quickSort\nexport const quickSort = (arr) => {\n  const _partition = (arr, low, high) => {\n    const pivot = arr[high];\n    let i = low - 1; // index of smaller element\n    for (let j = low; j < high; j++) {\n      dispatchList.push({ type: COMPARE_INDEX, payload: { arr: [...arr], indices: [j, high] } });\n      if (arr[j] < pivot) {\n        i++;\n        swap(arr, i, j);\n        dispatchList.push({ type: SWAP_INDEX, payload: { arr: [...arr], indices: [i, j] } });\n      }\n    }\n    swap(arr, i + 1, high);\n    dispatchList.push({ type: SWAP_INDEX, payload: { arr: [...arr], indices: [i + 1, high] } });\n    return i + 1;\n  };\n\n  const _quickSort = (arr, low, high) => {\n    if (low < high) {\n      const pi = _partition(arr, low, high);\n      _quickSort(arr, low, pi - 1);\n      _quickSort(arr, pi + 1, high);\n    }\n  };\n\n  const dispatchList = [];\n  _quickSort(arr, 0, arr.length - 1);\n  sweep(arr, dispatchList);\n  return dispatchList;\n};\n\n// heapSort\nexport const heapSort = (arr) => {\n  const _buildMaxHeap = (arr) => {\n    let i = Math.floor(arr.length / 2 - 1);\n\n    // Build a max heap out of\n    // all array elements passed in.\n    while (i >= 0) {\n      _heapify(arr, i, arr.length);\n      i -= 1;\n    }\n  };\n\n  const _heapify = (heap, i, max) => {\n    let index, leftChild, righChild;\n\n    while (i < max) {\n      index = i;\n      leftChild = 2 * i + 1;\n      righChild = leftChild + 1;\n      dispatchList.push({ type: COMPARE_INDEX, payload: { arr: [...heap], indices: [leftChild, index] } });\n      if (leftChild < max && heap[leftChild] > heap[index]) {\n        index = leftChild;\n      }\n      dispatchList.push({ type: COMPARE_INDEX, payload: { arr: [...heap], indices: [righChild, index] } });\n      if (righChild < max && heap[righChild] > heap[index]) {\n        index = righChild;\n      }\n      if (index === i) {\n        return;\n      }\n      swap(heap, i, index);\n      dispatchList.push({ type: SWAP_INDEX, payload: { arr: [...heap], indices: [i, index] } });\n      i = index;\n    }\n  };\n\n  // start here\n  const dispatchList = [];\n  // Build our max heap.\n  _buildMaxHeap(arr);\n\n  // Find last element.\n  let lastElement = arr.length - 1;\n\n  // Continue heap sorting until we have\n  // just one element left in the array.\n  while (lastElement > 0) {\n    swap(arr, 0, lastElement);\n    dispatchList.push({ type: SWAP_INDEX, payload: { arr: [...arr], indices: [0, lastElement] } });\n    _heapify(arr, 0, lastElement);\n    lastElement -= 1;\n  }\n  sweep(arr, dispatchList);\n  return dispatchList;\n};\n\nconst sweep = (arr, dispatchList) => {\n  for (let i = 0; i < arr.length; i++) dispatchList.push({ type: SWEEP, payload: { index: i } });\n};\n\nconst swap = (arr, i, j) => {\n  const temp = arr[i];\n  arr[i] = arr[j];\n  arr[j] = temp;\n};\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\nimport \"./Sidebar.scss\";\nimport { GlobalStateContext } from \"../../store/providers/GlobalStateProvider/GlobalStateProvider\";\nimport { CHANGE_SIZE, RANDOMIZE, TOGGLE_PLAY, CHANGE_ALGORITHM, CHANGE_DELAY } from \"../../store/actionTypes/actionTypes\";\nimport { getAlgorithm } from '../../algorithms/index';\n\nconst Sidebar = () => {\n  const { state, dispatch } = useContext(GlobalStateContext);\n  const { size, playing, arr, sortingAlgorithm, delay } = state;\n  const [dispatchList, setDispatchList] = useState([]);\n  const dispatchListRef = useRef(dispatchList);\n  dispatchListRef.current = dispatchList;\n  const [timerId, setTimerId] = useState(0);\n\n  const onSizeSliderChange = (e) => {\n    dispatch({ type: CHANGE_SIZE, payload: { size: e.target.value } });\n  };\n\n  const onDelaySliderChange = e => {\n    dispatch({ type: CHANGE_DELAY, payload: { delay: e.target.value } });\n  };\n\n  const onRandomizeClick = (e) => {\n    dispatch({ type: RANDOMIZE });\n  };\n\n  // console.log(delay);\n  // console.log(dispatchList.length, dispatchList);\n  useEffect(() => {\n    if (playing) {\n      const sortFunction = getAlgorithm(sortingAlgorithm).algorithm;\n      if (sortFunction) {\n        setDispatchList(sortFunction([...arr]));\n        const curTimerId = setInterval(() => {\n          const dispatchListRefCurrent = dispatchListRef.current;\n          if (dispatchListRefCurrent && dispatchListRefCurrent.length > 0) {\n            dispatch(dispatchListRefCurrent[0]);\n            setDispatchList(dispatchListRefCurrent.slice(1));\n          } else if (dispatchListRefCurrent && dispatchListRefCurrent.length === 0) {\n            dispatch({ type: TOGGLE_PLAY, payload: { playing: false } });\n          }\n        }, delay);\n        setTimerId(curTimerId);\n      }\n    } else if (!playing) {\n      clearInterval(timerId);\n    }\n\n    return () => {\n      clearInterval(timerId);\n    }\n  }, [playing, delay])\n\n  const onSelectChange = e => {\n    dispatch({ type: CHANGE_ALGORITHM, payload: { sortingAlgorithm: Number(e.target.value) } });\n  }\n\n  const onPlayToggleClick = async (e) => {\n    dispatch({ type: TOGGLE_PLAY, payload: { playing: !playing } });\n  };\n\n  return (\n    <div className=\"sidebar_container\">\n      <div className=\"sidebar\">\n        <button className=\"button is-primary\" id=\"play_button\" onClick={onPlayToggleClick}>\n          <span className=\"icon\">{playing ? <i className=\"fas fa-pause\" /> : <i className=\"fas fa-play\" />}</span>\n          <span className=\"button_title\">{playing ? \"Pause\" : \"Play\"}</span>\n        </button>\n        <button className=\"button is-primary\" id=\"randomize_button\" disabled={playing} onClick={onRandomizeClick}>\n          <span className=\"icon\"><i className=\"fas fa-random\" /></span>\n          <span className=\"button_title\">Randomize</span>\n        </button>\n        <div className=\"slider\">\n          <span className=\"slider_label\">Size: {size}</span>\n          <input className=\"slider slider_input\" step=\"1\" min=\"10\" max=\"200\" value={size} type=\"range\" disabled={playing} onChange={onSizeSliderChange} />\n        </div>\n        <div className=\"slider\">\n          <span className=\"slider_label\">Delay: {delay}</span>\n          <input className=\"slider slider_input\" step=\"1\" min=\"0\" max=\"500\" value={delay} type=\"range\" onChange={onDelaySliderChange} />\n        </div>\n        <div className=\"select\" id=\"select_div\">\n          <select name=\"\" id=\"\" disabled={playing} onChange={onSelectChange}>\n            <option value=\"0\">Bubble Sort</option>\n            <option value=\"1\">Insertion Sort</option>\n            <option value=\"2\">Selection Sort</option>\n            <option value=\"3\">Merge Sort</option>\n            <option value=\"4\">Quick Sort</option>\n            <option value=\"5\">Heap Sort</option>\n          </select>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import { bubbleSort, insertionSort, selectionSort, mergeSort, quickSort, heapSort } from \"./sorters\";\n\nexport const getAlgorithm = (id) => {\n  switch (id) {\n    case 0:\n      return { name: \"Bubble Sort\", algorithm: bubbleSort };\n    case 1:\n      return { name: \"Insertion Sort\", algorithm: insertionSort };\n    case 2:\n      return { name: \"Selection Sort\", algorithm: selectionSort };\n    case 3:\n      return { name: \"Merge Sort\", algorithm: mergeSort };\n    case 4:\n      return { name: \"Quick Sort\", algorithm: quickSort };\n    case 5:\n      return { name: \"Heap Sort\", algorithm: heapSort };\n    default:\n      return { name: \"Bubble Sort\" };\n  }\n};\n","import React, { useContext } from \"react\";\nimport \"./Visualizer.scss\";\nimport { Bar } from \"react-chartjs-2\";\nimport { GlobalStateContext } from \"../../store/providers/GlobalStateProvider/GlobalStateProvider\";\n\nconst Visualizer = () => {\n  const { state, dispatch } = useContext(GlobalStateContext);\n  const { arr, colors } = state;\n\n  const data = {\n    labels: Array(arr.length).map((x) => x),\n    datasets: [\n      {\n        backgroundColor: [...colors],\n        hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n        hoverBorderColor: \"rgba(255,99,132,1)\",\n        data: [...arr], // need to clone arr since chartJs props are being passed to it\n      },\n    ],\n  };\n\n  const options = {\n    maintainAspectRatio: false,\n    animation: {\n      duration: 0,\n      easing: \"linear\",\n      rotate: true,\n      scale: false,\n    },\n    legend: {\n      display: false,\n    },\n    scales: {\n      xAxes: [{ display: false }],\n      yAxes: [{ display: false }],\n    },\n  };\n  return (\n    <div className=\"visualizer_container\">\n      <div className=\"visualizer\">\n        <Bar data={data} options={options} />\n      </div>\n    </div>\n  );\n};\n\nexport default Visualizer;\n","import React from \"react\";\nimport \"./App.scss\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport Visualizer from \"./components/Visualizer/Visualizer\";\nimport \"bulma/css/bulma.css\";\nimport { GlobalStateProvider } from \"./store/providers/GlobalStateProvider/GlobalStateProvider\";\n\nfunction App() {\n  return (\n    <GlobalStateProvider>\n      <div className=\"App\">\n        <Sidebar />\n        <Visualizer />\n      </div>\n    </GlobalStateProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}