{"version":3,"sources":["utils/utils.js","store/providers/GlobalStateProvider/GlobalStateProvider.js","store/actionTypes/actionTypes.js","algorithms/sorters.js","components/Sidebar/Sidebar.jsx","algorithms/index.js","components/Visualizer/Visualizer.jsx","App.js","serviceWorker.js","index.js"],"names":["generateArray","size","Array","from","length","Math","random","generateDefaultColors","x","generateCompareColors","indices","colors","forEach","ind","generateSwapColors","swap","arr","i","j","temp","initialState","playing","sortingAlgorithm","GlobalStateContext","createContext","Provider","GlobalStateProvider","children","useReducer","state","action","type","payload","dispatch","value","bubbleSort","dispatchList","push","insertionSort","selectionSort","minIdx","len","Sidebar","useContext","useState","setDispatchList","dispatchListRef","useRef","current","timerId","setTimerId","useEffect","console","log","sortFunction","id","name","algorithm","getAlgorithm","curTimerId","setInterval","dispatchListRefCurrent","slice","clearInterval","onPlayToggleClick","e","a","className","onClick","disabled","step","min","max","onChange","target","Number","Visualizer","data","labels","map","datasets","backgroundColor","hoverBackgroundColor","hoverBorderColor","options","maintainAspectRatio","animation","duration","easing","rotate","scale","legend","display","scales","xAxes","yAxes","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.abbb6d19.chunk.js","sourcesContent":["const defaultColor = \"rgba(237,37,78,0.9)\";\nconst compareColor = \"rgba(1,25,54,1)\";\nconst swapColor = \"rgba(249,220,92,0.9)\";\n\nexport const generateArray = (size) => Array.from({ length: size }, () => Math.random() * 40);\n\nexport const delay = (t) => new Promise((resolve) => setTimeout(resolve, t));\n\nexport const cancellableDelay = (t) => {\n  let timer = 0;\n  let reject = null;\n  const promise = new Promise((resolve, _reject) => {\n    reject = _reject;\n    timer = setTimeout(resolve, t);\n  });\n  return {\n    get promise() {\n      return promise;\n    },\n    cancel() {\n      if (timer) {\n        clearTimeout(timer);\n        timer = 0;\n        reject();\n        reject = null;\n      }\n    },\n  };\n};\n\nexport const generateDefaultColors = (size) => Array.from({ length: size }, (x) => defaultColor);\n\nexport const generateCompareColors = (size, indices) => {\n  const colors = Array.from({ length: size }, (x) => defaultColor);\n  indices.forEach((ind) => (colors[ind] = compareColor));\n  return colors;\n};\n\nexport const generateSwapColors = (size, indices) => {\n  const colors = Array.from({ length: size }, (x) => defaultColor);\n  indices.forEach((ind) => (colors[ind] = swapColor));\n  return colors;\n};\n\nexport const swap = (arr, i, j) => {\n  const temp = arr[i];\n  arr[i] = arr[j];\n  arr[j] = temp;\n};\n","import React, { createContext, useReducer } from \"react\";\nimport { CHANGE_SIZE, RANDOMIZE, TOGGLE_PLAY, SWAP_INDEX, COMPARE_INDEX, CHANGE_ALGORITHM } from \"../../actionTypes/actionTypes\";\nimport { generateCompareColors, generateArray, generateDefaultColors, generateSwapColors } from \"../../../utils/utils\";\n\nconst defaultSize = 100;\nconst initialState = {\n  size: defaultSize,\n  arr: generateArray(defaultSize),\n  playing: false,\n  colors: generateDefaultColors(defaultSize),\n  sortingAlgorithm: 0,\n};\nconst GlobalStateContext = createContext(initialState);\nconst { Provider } = GlobalStateContext;\n\nconst GlobalStateProvider = ({ children }) => {\n  const [state, dispatch] = useReducer((state, action) => {\n    switch (action.type) {\n      case CHANGE_SIZE:\n        return { ...state, size: action.payload.size, arr: generateArray(action.payload.size), colors: generateDefaultColors(action.payload.size) };\n      case RANDOMIZE:\n        return { ...state, arr: generateArray(state.size) };\n      case TOGGLE_PLAY:\n        return { ...state, playing: action.payload.playing };\n      case COMPARE_INDEX:\n        return { ...state, arr: action.payload.arr, colors: generateCompareColors(state.size, action.payload.indices) };\n      case SWAP_INDEX:\n        return { ...state, arr: action.payload.arr, colors: generateSwapColors(state.size, action.payload.indices) };\n      case CHANGE_ALGORITHM:\n        return { ...state, sortingAlgorithm: action.payload.sortingAlgorithm };\n      default:\n        return state;\n    }\n  }, initialState);\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\n};\n\nexport { GlobalStateContext, GlobalStateProvider };\n","export const CHANGE_SIZE = \"CHANGE_SIZE\";\nexport const RANDOMIZE = \"RANDOMIZE\";\nexport const TOGGLE_PLAY = \"TOGGLE_PLAY\";\nexport const SWAP_INDEX = \"SWAP_INDEX\";\nexport const COMPARE_INDEX = \"COMPARE_INDEX\";\nexport const CHANGE_ALGORITHM = \"CHANGE_ALGORITHM\";\n","import { COMPARE_INDEX, SWAP_INDEX } from \"../store/actionTypes/actionTypes\";\nimport { swap } from \"../utils/utils\";\n\nexport const bubbleSort = (arr) => {\n  const dispatchList = [];\n  for (let i = 0; i < arr.length - 1; i++) {\n    for (let j = 0; j < arr.length - i - 1; j++) {\n      dispatchList.push({ type: COMPARE_INDEX, payload: { arr: [...arr], indices: [j, j + 1] } });\n      if (arr[j] > arr[j + 1]) {\n        swap(arr, j, j + 1);\n        dispatchList.push({ type: SWAP_INDEX, payload: { arr: [...arr], indices: [j, j + 1] } });\n      }\n    }\n  }\n  return dispatchList;\n};\n\nexport const insertionSort = (arr) => {\n  const dispatchList = [];\n  let i = 1;\n  while (i < arr.length) {\n    let x = arr[i];\n    let j = i - 1;\n    dispatchList.push({ type: COMPARE_INDEX, payload: { arr: [...arr], indices: [j, i] } });\n    while (j >= 0 && arr[j] > x) {\n      arr[j + 1] = arr[j];\n      dispatchList.push({ type: SWAP_INDEX, payload: { arr: [...arr], indices: [j, j + 1] } });\n      j--;\n    }\n    arr[j + 1] = x;\n    dispatchList.push({ type: SWAP_INDEX, payload: { arr: [...arr], indices: [j + 1, i] } });\n    i++;\n  }\n  return dispatchList;\n};\n\nexport const selectionSort = function (arr) {\n  const dispatchList = [];\n  let minIdx;\n  let len = arr.length;\n\n  for (let i = 0; i < len; i++) {\n    minIdx = i;\n    for (let j = i + 1; j < len; j++) {\n      dispatchList.push({ type: COMPARE_INDEX, payload: { arr: [...arr], indices: [j, minIdx] } });\n      if (arr[j] < arr[minIdx]) {\n        minIdx = j;\n      }\n    }\n    swap(arr, i, minIdx);\n    dispatchList.push({ type: SWAP_INDEX, payload: { arr: [...arr], indices: [i, minIdx] } });\n  }\n  return dispatchList;\n};\n\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\nimport \"./Sidebar.scss\";\nimport { GlobalStateContext } from \"../../store/providers/GlobalStateProvider/GlobalStateProvider\";\nimport { CHANGE_SIZE, RANDOMIZE, TOGGLE_PLAY, CHANGE_ALGORITHM } from \"../../store/actionTypes/actionTypes\";\nimport { getAlgorithm } from '../../algorithms/index';\n\n\nconst Sidebar = () => {\n  const { state, dispatch } = useContext(GlobalStateContext);\n  const { size, playing, arr, sortingAlgorithm } = state;\n  const [dispatchList, setDispatchList] = useState([]);\n  const dispatchListRef = useRef(dispatchList);\n  dispatchListRef.current = dispatchList;\n  const [timerId, setTimerId] = useState(0);\n\n  const onSliderChange = (e) => {\n    dispatch({ type: CHANGE_SIZE, payload: { size: e.target.value } });\n  };\n\n  const onRandomizeClick = (e) => {\n    dispatch({ type: RANDOMIZE });\n  };\n\n  const delay = 0;\n  useEffect(() => {\n    if (playing) {\n      console.log('inside useEffect');\n      const sortFunction = getAlgorithm(sortingAlgorithm)?.algorithm;\n      console.log('after getting sortFunction', sortFunction);\n      if (sortFunction) {\n        console.log('before calling insertion Sort');\n        setDispatchList(sortFunction([...arr]));\n        const curTimerId = setInterval(() => {\n          const dispatchListRefCurrent = dispatchListRef.current;\n          if (dispatchListRefCurrent && dispatchListRefCurrent.length > 0) {\n            dispatch(dispatchListRefCurrent[0]);\n            setDispatchList(dispatchListRefCurrent.slice(1));\n          }\n        }, delay);\n        setTimerId(curTimerId);\n      }\n    } else if (!playing) {\n      clearInterval(timerId);\n    }\n  }, [playing])\n\n  const onSelectChange = e => {\n    dispatch({ type: CHANGE_ALGORITHM, payload: { sortingAlgorithm: Number(e.target.value) } });\n  }\n\n  const onPlayToggleClick = async (e) => {\n    dispatch({ type: TOGGLE_PLAY, payload: { playing: !playing } });\n  };\n\n  return (\n    <div className=\"sidebar_container\">\n      <div className=\"sidebar\">\n        <button className=\"button is-primary\" id=\"play_button\" onClick={onPlayToggleClick}>\n          <span className=\"icon\">{playing ? <i className=\"fas fa-pause\" /> : <i className=\"fas fa-play\" />}</span>\n          <span className=\"button_title\">{playing ? \"Pause\" : \"Play\"}</span>\n        </button>\n        <button className=\"button is-primary\" id=\"randomize_button\" disabled={playing} onClick={onRandomizeClick}>\n          <span className=\"icon\"><i className=\"fas fa-random\" /></span>\n          <span className=\"button_title\">Randomize</span>\n        </button>\n        <div className=\"slider\">\n          <span id=\"slider_label\">Size: {size}</span>\n          <input id=\"slider_input\" className=\"slider\" step=\"1\" min=\"10\" max=\"200\" value={size} type=\"range\" disabled={playing} onChange={onSliderChange} />\n        </div>\n        <div className=\"select\" id=\"select_div\">\n          <select name=\"\" id=\"\" disabled={playing} onChange={onSelectChange}>\n            <option value=\"0\">Bubble Sort</option>\n            <option value=\"1\">Insertion Sort</option>\n            <option value=\"2\">Selection Sort</option>\n            <option value=\"3\">Merge Sort</option>\n            <option value=\"4\">Quick Sort</option>\n            <option value=\"5\">Radix Sort</option>\n            <option value=\"6\">Heap Sort</option>{/* <option value=\"0\">{getAlgorithm(0).name}</option>\n            <option value=\"1\">{getAlgorithm(1).name}</option>\n            <option value=\"2\">{getAlgorithm(2).name}</option>\n            <option value=\"3\">{getAlgorithm(3).name}</option>\n            <option value=\"4\">{getAlgorithm(4).name}</option>\n            <option value=\"5\">{getAlgorithm(5).name}</option>\n            <option value=\"6\">{getAlgorithm(6).name}</option> */}\n          </select>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import { bubbleSort, insertionSort, selectionSort } from \"./sorters\";\n\nexport const getAlgorithm = (id) => {\n  switch (id) {\n    case 0:\n      return { name: \"Bubble Sort\", algorithm: bubbleSort };\n    case 1:\n      return { name: \"Insertion Sort\", algorithm: insertionSort };\n    case 2:\n      return { name: \"Selection Sort\", algorithm: selectionSort };\n    case 3:\n      return { name: \"Merge Sort\" };\n    case 4:\n      return { name: \"Quick Sort\" };\n    case 5:\n      return { name: \"Radix Sort\" };\n    case 6:\n      return { name: \"Heap Sort\" };\n    default:\n      return { name: \"Bubble Sort\" };\n  }\n};\n","import React, { useContext } from \"react\";\nimport \"./Visualizer.scss\";\nimport { Bar } from \"react-chartjs-2\";\nimport { GlobalStateContext } from \"../../store/providers/GlobalStateProvider/GlobalStateProvider\";\n\nconst Visualizer = () => {\n  const { state, dispatch } = useContext(GlobalStateContext);\n  const { arr, colors } = state;\n\n  const data = {\n    labels: Array(arr.length).map((x) => x),\n    datasets: [\n      {\n        backgroundColor: [...colors],\n        hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n        hoverBorderColor: \"rgba(255,99,132,1)\",\n        data: [...arr], // need to clone arr since chartJs props are being passed to it\n      },\n    ],\n  };\n\n  const options = {\n    maintainAspectRatio: false,\n    animation: {\n      duration: 0,\n      easing: \"linear\",\n      rotate: true,\n      scale: false,\n    },\n    legend: {\n      display: false,\n    },\n    scales: {\n      xAxes: [{ display: false }],\n      yAxes: [{ display: false }],\n    },\n  };\n  return (\n    <div className=\"visualizer_container\">\n      <div className=\"visualizer\">\n        <Bar data={data} options={options} />\n      </div>\n    </div>\n  );\n};\n\nexport default Visualizer;\n","import React from \"react\";\nimport \"./App.scss\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport Visualizer from \"./components/Visualizer/Visualizer\";\nimport \"bulma/css/bulma.css\";\nimport { GlobalStateProvider } from \"./store/providers/GlobalStateProvider/GlobalStateProvider\";\n\nfunction App() {\n  return (\n    <GlobalStateProvider>\n      <div className=\"App\">\n        <Sidebar />\n        <Visualizer />\n      </div>\n    </GlobalStateProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}