{"version":3,"sources":["store/actionTypes/actionTypes.js","utils/utils.js","algorithms/sorters.js","algorithms/index.js","store/providers/GlobalStateProvider/GlobalStateProvider.js","components/Sidebar/Sidebar.jsx","components/Visualizer/Visualizer.jsx","App.js","index.js"],"names":["SWAP_INDEX","defaultColor","generateArray","size","Array","from","length","Math","random","generateDefaultColors","x","generateCompareColors","indices","colors","forEach","ind","generateSwapColors","generateSweepColors","index","i","getSweepFreq","arr","bubbleSort","dispatchList","j","push","type","payload","swap","sweep","insertionSort","selectionSort","minIdx","len","mergeSort","_mergeSort","start","end","mid","floor","temp","k","_merge","quickSort","_quickSort","low","high","pi","pivot","_partition","heapSort","_heapify","largest","left","right","BUBBLE_SORT","INSERTION_SORT","SELECTION_SORT","MERGE_SORT","QUICK_SORT","HEAP_SORT","initialState","playing","sortingAlgorithm","delay","freq","GlobalStateContext","createContext","Provider","GlobalStateProvider","children","useReducer","state","action","dispatch","value","Sidebar","useContext","useState","timerId","setTimerId","setDispatchList","dispatchListRef","useRef","current","synth","setSynth","useEffect","Transport","swing","swingSubdivision","Synth","toMaster","triggerAttackRelease","sortFunction","name","algorithm","getAlgorithm","curTimerId","setInterval","dispatchListRefCurrent","slice","clearInterval","onPlayToggleClick","e","a","className","id","onClick","disabled","step","min","max","onChange","target","href","rel","Visualizer","data","labels","fill","map","num","datasets","backgroundColor","hoverBackgroundColor","hoverBorderColor","options","maintainAspectRatio","animation","duration","easing","rotate","scale","legend","display","scales","xAxes","yAxes","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66b06673.chunk.js","sourcesContent":["export const CHANGE_SIZE = \"CHANGE_SIZE\";\nexport const RANDOMIZE = \"RANDOMIZE\";\nexport const TOGGLE_PLAY = \"TOGGLE_PLAY\";\nexport const SWAP_INDEX = \"SWAP_INDEX\";\nexport const COMPARE_INDEX = \"COMPARE_INDEX\";\nexport const CHANGE_ALGORITHM = \"CHANGE_ALGORITHM\";\nexport const CHANGE_DELAY = \"CHANGE_DELAY\";\nexport const SWEEP = \"SWEEP\";\n","const defaultColor = \"rgba(237,37,78,0.9)\";\nconst compareColor = \"rgba(1,25,54,1)\";\nconst swapColor = \"rgba(249,220,92,0.9)\";\nconst sweepColor = \"#28965A\";\n\nexport const generateArray = (size) => Array.from({ length: size }, () => Math.random() * 40);\n\nexport const delay = (t) => new Promise((resolve) => setTimeout(resolve, t));\n\nexport const cancellableDelay = (t) => {\n  let timer = 0;\n  let reject = null;\n  const promise = new Promise((resolve, _reject) => {\n    reject = _reject;\n    timer = setTimeout(resolve, t);\n  });\n  return {\n    get promise() {\n      return promise;\n    },\n    cancel() {\n      if (timer) {\n        clearTimeout(timer);\n        timer = 0;\n        reject();\n        reject = null;\n      }\n    },\n  };\n};\n\nexport const generateDefaultColors = (size) => Array.from({ length: size }, (x) => defaultColor);\n\nexport const generateCompareColors = (size, indices) => {\n  const colors = Array.from({ length: size }, (x) => defaultColor);\n  indices.forEach((ind) => (colors[ind] = compareColor));\n  return colors;\n};\n\nexport const generateSwapColors = (size, indices) => {\n  const colors = Array.from({ length: size }, (x) => defaultColor);\n  indices.forEach((ind) => (colors[ind] = swapColor));\n  return colors;\n};\n\nexport const generateSweepColors = (size, index) => {\n  const colors = Array.from({ length: size }, (x) => defaultColor);\n  for (let i = 0; i <= index; i++) {\n    colors[i] = sweepColor;\n  }\n  return colors;\n};\n\nexport const getCompareFreq = (arr, indices) => {\n  const scale = 5;\n  // console.log(\"compareFreq\", indices, arr.length, arr[indices[0]], arr[indices[1]]);\n  return (arr[indices[0]] + arr[indices[1]]) * scale;\n};\n\nexport const getSweepFreq = (arr, index) => {\n  const scale = 10;\n  // console.log(\"sweepFreq\", arr[index]);\n  return arr[index] * scale;\n};\n","import { COMPARE_INDEX, SWAP_INDEX, SWEEP } from '../store/actionTypes/actionTypes';\n\n// bubbleSort\nexport const bubbleSort = (arr) => {\n  const dispatchList = [];\n  for (let i = 0; i < arr.length - 1; i++) {\n    for (let j = 0; j < arr.length - i - 1; j++) {\n      dispatchList.push({ type: COMPARE_INDEX, payload: { arr: [...arr], indices: [j, j + 1] } });\n      if (arr[j] > arr[j + 1]) {\n        swap(arr, j, j + 1);\n        dispatchList.push({ type: SWAP_INDEX, payload: { arr: [...arr], indices: [j, j + 1] } });\n      }\n    }\n  }\n  sweep(arr, dispatchList);\n  return dispatchList;\n};\n\n// insertionSort\nexport const insertionSort = (arr) => {\n  const dispatchList = [];\n  let i = 1;\n  while (i < arr.length) {\n    let x = arr[i];\n    let j = i - 1;\n    dispatchList.push({ type: COMPARE_INDEX, payload: { arr: [...arr], indices: [j, i] } });\n    while (j >= 0 && arr[j] > x) {\n      arr[j + 1] = arr[j];\n      dispatchList.push({ type: SWAP_INDEX, payload: { arr: [...arr], indices: [j, j + 1] } });\n      j--;\n    }\n    arr[j + 1] = x;\n    dispatchList.push({ type: SWAP_INDEX, payload: { arr: [...arr], indices: [j + 1, i] } });\n    i++;\n  }\n  sweep(arr, dispatchList);\n  return dispatchList;\n};\n\n// selectionSort\nexport const selectionSort = (arr) => {\n  const dispatchList = [];\n  let minIdx;\n  let len = arr.length;\n\n  for (let i = 0; i < len; i++) {\n    minIdx = i;\n    for (let j = i + 1; j < len; j++) {\n      dispatchList.push({ type: COMPARE_INDEX, payload: { arr: [...arr], indices: [j, minIdx] } });\n      if (arr[j] < arr[minIdx]) {\n        minIdx = j;\n      }\n    }\n    swap(arr, i, minIdx);\n    dispatchList.push({ type: SWAP_INDEX, payload: { arr: [...arr], indices: [i, minIdx] } });\n  }\n  sweep(arr, dispatchList);\n  return dispatchList;\n};\n\n// mergeSort\nexport const mergeSort = (arr) => {\n  const _merge = (arr, start, mid, end) => {\n    // create a temp array\n    const temp = [];\n\n    // crawlers for both intervals and for temp\n    let i = start,\n      j = mid + 1,\n      k = 0;\n\n    // traverse both arrays and in each iteration add smaller of both elements in temp\n    while (i <= mid && j <= end) {\n      dispatchList.push({ type: COMPARE_INDEX, payload: { arr: [...arr], indices: [i, j] } });\n      if (arr[i] <= arr[j]) {\n        dispatchList.push({ type: SWAP_INDEX, payload: { arr: [...arr], indices: [k, i] } });\n        temp[k++] = arr[i++];\n      } else {\n        dispatchList.push({ type: SWAP_INDEX, payload: { arr: [...arr], indices: [k, j] } });\n        temp[k++] = arr[j++];\n      }\n    }\n\n    // add elements left in the first interval\n    while (i <= mid) {\n      dispatchList.push({ type: SWAP_INDEX, payload: { arr: [...arr], indices: [k, i] } });\n      temp[k++] = arr[i++];\n    }\n\n    // add elements left in the second interval\n    while (j <= end) {\n      dispatchList.push({ type: SWAP_INDEX, payload: { arr: [...arr], indices: [k, j] } });\n      temp[k++] = arr[j++];\n    }\n\n    // copy temp to original interval\n    for (i = start; i <= end; i += 1) {\n      arr[i] = temp[i - start];\n      dispatchList.push({ type: SWAP_INDEX, payload: { arr: [...arr], indices: [i - start, i] } });\n    }\n  };\n\n  const _mergeSort = (arr, start, end) => {\n    if (start < end) {\n      const mid = Math.floor((start + end) / 2);\n      _mergeSort(arr, start, mid);\n      _mergeSort(arr, mid + 1, end);\n      _merge(arr, start, mid, end);\n    }\n  };\n\n  const dispatchList = [];\n  _mergeSort(arr, 0, arr.length - 1);\n  sweep(arr, dispatchList);\n  return dispatchList;\n};\n\n// quickSort\nexport const quickSort = (arr) => {\n  const _partition = (arr, low, high) => {\n    const pivot = arr[high];\n    let i = low - 1; // index of smaller element\n    for (let j = low; j < high; j++) {\n      dispatchList.push({ type: COMPARE_INDEX, payload: { arr: [...arr], indices: [j, high] } });\n      if (arr[j] < pivot) {\n        i++;\n        swap(arr, i, j);\n        dispatchList.push({ type: SWAP_INDEX, payload: { arr: [...arr], indices: [i, j] } });\n      }\n    }\n    swap(arr, i + 1, high);\n    dispatchList.push({ type: SWAP_INDEX, payload: { arr: [...arr], indices: [i + 1, high] } });\n    return i + 1;\n  };\n\n  const _quickSort = (arr, low, high) => {\n    if (low < high) {\n      const pi = _partition(arr, low, high);\n      _quickSort(arr, low, pi - 1);\n      _quickSort(arr, pi + 1, high);\n    }\n  };\n\n  const dispatchList = [];\n  _quickSort(arr, 0, arr.length - 1);\n  sweep(arr, dispatchList);\n  return dispatchList;\n};\n\n// heapSort new\nexport const heapSort = (arr) => {\n  const _heapify = (arr, length, i) => {\n    let largest = i,\n      left = 2 * i + 1,\n      right = left + 1;\n\n    if (left < length && arr[left] > arr[largest]) {\n      largest = left;\n      dispatchList.push({ type: COMPARE_INDEX, payload: { arr: [...arr], indices: [left, largest] } });\n    }\n    if (right < length && arr[right] > arr[largest]) {\n      largest = right;\n      dispatchList.push({ type: COMPARE_INDEX, payload: { arr: [...arr], indices: [right, largest] } });\n    }\n\n    if (largest !== i) {\n      [arr[i], arr[largest]] = [arr[largest], arr[i]];\n      dispatchList.push({ type: SWAP_INDEX, payload: { arr: [...arr], indices: [i, largest] } });\n      _heapify(arr, length, largest);\n    }\n    return arr;\n  };\n\n  // start here\n  const dispatchList = [];\n  let length = arr.length,\n    i = Math.floor(length / 2 - 1),\n    k = length - 1;\n\n  while (i >= 0) {\n    _heapify(arr, length, i);\n    i--;\n  }\n\n  while (k >= 0) {\n    [arr[0], arr[k]] = [arr[k], arr[0]];\n    dispatchList.push({ type: SWAP_INDEX, payload: { arr: [...arr], indices: [0, k] } });\n    _heapify(arr, k, 0);\n    k--;\n  }\n  sweep(arr, dispatchList);\n  return dispatchList;\n};\n\nconst sweep = (arr, dispatchList) => {\n  for (let i = 0; i < arr.length; i++) dispatchList.push({ type: SWEEP, payload: { index: i } });\n};\n\nconst swap = (arr, i, j) => {\n  const temp = arr[i];\n  arr[i] = arr[j];\n  arr[j] = temp;\n};\n","import { bubbleSort, insertionSort, selectionSort, mergeSort, quickSort, heapSort } from \"./sorters\";\n\nexport const getAlgorithm = (sortingAlgorithm) => {\n  switch (sortingAlgorithm) {\n    case BUBBLE_SORT:\n      return { name: \"Bubble Sort\", algorithm: bubbleSort };\n    case INSERTION_SORT:\n      return { name: \"Insertion Sort\", algorithm: insertionSort };\n    case SELECTION_SORT:\n      return { name: \"Selection Sort\", algorithm: selectionSort };\n    case MERGE_SORT:\n      return { name: \"Merge Sort\", algorithm: mergeSort };\n    case QUICK_SORT:\n      return { name: \"Quick Sort\", algorithm: quickSort };\n    case HEAP_SORT:\n      return { name: \"Heap Sort\", algorithm: heapSort };\n    default:\n      return { name: \"Bubble Sort\" };\n  }\n};\n\nexport const BUBBLE_SORT = \"BUBBLE_SORT\";\nexport const INSERTION_SORT = \"INSERTION_SORT\";\nexport const SELECTION_SORT = \"SELECTION_SORT\";\nexport const MERGE_SORT = \"MERGE_SORT\";\nexport const QUICK_SORT = \"QUICK_SORT\";\nexport const HEAP_SORT = \"HEAP_SORT\";\n","import React, { createContext, useReducer } from \"react\";\nimport { CHANGE_SIZE, RANDOMIZE, TOGGLE_PLAY, SWAP_INDEX, COMPARE_INDEX, CHANGE_ALGORITHM, CHANGE_DELAY, SWEEP } from \"../../actionTypes/actionTypes\";\nimport { generateCompareColors, generateArray, generateDefaultColors, generateSwapColors, generateSweepColors, getCompareFreq, getSweepFreq } from \"../../../utils/utils\";\nimport { BUBBLE_SORT } from \"../../../algorithms\";\n\nconst defaultSize = 100;\nconst initialState = {\n  size: defaultSize,\n  arr: generateArray(defaultSize),\n  playing: false,\n  colors: generateDefaultColors(defaultSize),\n  sortingAlgorithm: BUBBLE_SORT,\n  delay: 10,\n  freq: 110,\n};\nconst GlobalStateContext = createContext(initialState);\nconst { Provider } = GlobalStateContext;\n\nconst GlobalStateProvider = ({ children }) => {\n  const [state, dispatch] = useReducer((state, action) => {\n    switch (action.type) {\n      case CHANGE_SIZE:\n        return { ...state, size: action.payload.size, arr: generateArray(action.payload.size), colors: generateDefaultColors(action.payload.size) };\n      case RANDOMIZE:\n        return { ...state, arr: generateArray(state.size), colors: generateDefaultColors(state.size) };\n      case TOGGLE_PLAY:\n        return { ...state, playing: action.payload.playing };\n      case COMPARE_INDEX:\n        return { ...state, arr: action.payload.arr, colors: generateCompareColors(state.size, action.payload.indices), freq: getCompareFreq(state.arr, action.payload.indices) };\n      case SWAP_INDEX:\n        return { ...state, arr: action.payload.arr, colors: generateSwapColors(state.size, action.payload.indices) };\n      case SWEEP:\n        return { ...state, colors: generateSweepColors(state.size, action.payload.index), freq: getSweepFreq(state.arr, action.payload.index) };\n      case CHANGE_ALGORITHM:\n        return { ...state, sortingAlgorithm: action.payload.sortingAlgorithm };\n      case CHANGE_DELAY:\n        return { ...state, delay: action.payload.delay };\n      default:\n        return state;\n    }\n  }, initialState);\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\n};\n\nexport { GlobalStateContext, GlobalStateProvider };\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\nimport { GlobalStateContext } from \"../../store/providers/GlobalStateProvider/GlobalStateProvider\";\nimport { CHANGE_SIZE, RANDOMIZE, TOGGLE_PLAY, CHANGE_ALGORITHM, CHANGE_DELAY } from \"../../store/actionTypes/actionTypes\";\nimport { getAlgorithm, BUBBLE_SORT, INSERTION_SORT, MERGE_SORT, QUICK_SORT, HEAP_SORT } from \"../../algorithms/index\";\nimport { Synth, Transport } from 'tone';\nimport \"./Sidebar.scss\";\n\nconst Sidebar = () => {\n  const { state, dispatch } = useContext(GlobalStateContext);\n  const { size, playing, arr, sortingAlgorithm, delay, freq } = state;\n  const [timerId, setTimerId] = useState(0);\n  const [dispatchList, setDispatchList] = useState([]);\n  const dispatchListRef = useRef(dispatchList);\n  dispatchListRef.current = dispatchList;\n  const [synth, setSynth] = useState();\n\n  useEffect(() => {\n    Transport.swing = 0.5;\n    Transport.swingSubdivision = '16n';\n    setSynth(new Synth().toMaster());\n  }, []);\n\n  useEffect(() => {\n    if (synth) {\n      synth.triggerAttackRelease(freq, \"2048n\");\n    }\n  }, [dispatchList]);\n\n  useEffect(() => {\n    if (playing) {\n      const sortFunction = getAlgorithm(sortingAlgorithm).algorithm;\n      if (sortFunction) {\n        setDispatchList(sortFunction([...arr]));\n        const curTimerId = setInterval(() => {\n          const dispatchListRefCurrent = dispatchListRef.current;\n          if (dispatchListRefCurrent && dispatchListRefCurrent.length > 0) {\n            dispatch(dispatchListRefCurrent[0]);\n            setDispatchList(dispatchListRefCurrent.slice(1));\n          } else if (dispatchListRefCurrent && dispatchListRefCurrent.length === 0) {\n            dispatch({ type: TOGGLE_PLAY, payload: { playing: false } });\n          }\n        }, delay);\n        setTimerId(curTimerId);\n      }\n    } else if (!playing) {\n      clearInterval(timerId);\n    }\n\n    return () => {\n      clearInterval(timerId);\n    };\n  }, [playing, delay]);\n\n  const onSelectChange = (e) => {\n    dispatch({ type: CHANGE_ALGORITHM, payload: { sortingAlgorithm: e.target.value } });\n  };\n\n  const onPlayToggleClick = async (e) => {\n    dispatch({ type: TOGGLE_PLAY, payload: { playing: !playing } });\n  };\n\n  const onSizeSliderChange = (e) => {\n    dispatch({ type: CHANGE_SIZE, payload: { size: e.target.value } });\n  };\n\n  const onDelaySliderChange = (e) => {\n    dispatch({ type: CHANGE_DELAY, payload: { delay: e.target.value } });\n  };\n\n  const onRandomizeClick = (e) => {\n    dispatch({ type: RANDOMIZE });\n  };\n\n  return (\n    <div className=\"sidebar_container\">\n      <div className=\"sidebar\">\n        <button className=\"button is-primary\" id=\"play_button\" onClick={onPlayToggleClick}>\n          <span className=\"icon\">{playing ? <i className=\"fas fa-pause\" /> : <i className=\"fas fa-play\" />}</span>\n          <span className=\"button_title\">{playing ? \"Pause\" : \"Play\"}</span>\n        </button>\n        <button className=\"button is-primary\" id=\"randomize_button\" disabled={playing} onClick={onRandomizeClick}>\n          <span className=\"icon\">\n            <i className=\"fas fa-random\" />\n          </span>\n          <span className=\"button_title\">Randomize</span>\n        </button>\n        <div className=\"slider\">\n          <span className=\"slider_label\">Size: {size}</span>\n          <input className=\"slider slider_input\" step=\"1\" min=\"10\" max=\"200\" value={size} type=\"range\" disabled={playing} onChange={onSizeSliderChange} />\n        </div>\n        <div className=\"slider\">\n          <span className=\"slider_label\">Delay: {delay}</span>\n          <input className=\"slider slider_input\" step=\"1\" min=\"0\" max=\"500\" value={delay} type=\"range\" onChange={onDelaySliderChange} />\n        </div>\n        <div className=\"select\" id=\"select_div\">\n          <select name=\"\" id=\"\" disabled={playing} onChange={onSelectChange}>\n            <option value={BUBBLE_SORT}>Bubble Sort</option>\n            <option value={INSERTION_SORT}>Insertion Sort</option>\n            <option value={INSERTION_SORT}>Selection Sort</option>\n            <option value={MERGE_SORT}>Merge Sort</option>\n            <option value={QUICK_SORT}>Quick Sort</option>\n            <option value={HEAP_SORT}>Heap Sort</option>\n          </select>\n        </div>\n      </div>\n      <div className=\"footer_container\">\n        {/* <button className=\"button is-small is-primary\">\n          <span className=\"icon\">\n            <i class=\"fas fa-question\" />\n          </span>\n          <span className=\"\">Help</span>\n        </button> */}\n        <a href=\"https://github.com/rohitkrishna094/react-sort\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"button is-small is-primary\">\n          <span className=\"icon\">\n            <i className=\"fab fa-github\" />\n          </span>\n          <span>Star Me on Github</span>\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React, { useContext } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { GlobalStateContext } from \"../../store/providers/GlobalStateProvider/GlobalStateProvider\";\nimport \"./Visualizer.scss\";\n\nconst Visualizer = () => {\n  const { state } = useContext(GlobalStateContext);\n  const { arr, colors } = state;\n\n  const data = {\n    labels: new Array(arr.length).fill().map((num, i) => `array[${i}]`),\n    datasets: [\n      {\n        backgroundColor: [...colors],\n        hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n        hoverBorderColor: \"rgba(255,99,132,1)\",\n        data: [...arr], // need to clone arr since chartJs props are being passed to it\n      },\n    ],\n  };\n\n  const options = {\n    maintainAspectRatio: false,\n    animation: {\n      duration: 0,\n      easing: \"linear\",\n      rotate: true,\n      scale: false,\n    },\n    legend: {\n      display: false,\n    },\n    scales: {\n      xAxes: [{ display: false }],\n      yAxes: [{ display: false }],\n    },\n  };\n  return (\n    <div className=\"visualizer_container\">\n      <div className=\"visualizer\">\n        <Bar data={data} options={options} />\n      </div>\n    </div>\n  );\n};\n\nexport default Visualizer;\n","import React from \"react\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport Visualizer from \"./components/Visualizer/Visualizer\";\nimport { GlobalStateProvider } from \"./store/providers/GlobalStateProvider/GlobalStateProvider\";\nimport \"./App.scss\";\nimport \"bulma/css/bulma.css\";\n\nfunction App() {\n  return (\n    <GlobalStateProvider>\n      <div className=\"App\">\n        <Sidebar />\n        <Visualizer />\n      </div>\n    </GlobalStateProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}